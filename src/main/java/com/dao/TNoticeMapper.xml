<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.TNoticeMapper" >
  <resultMap id="BaseResultMap" type="com.model.TNotice" >
    <id column="NoticeId" property="noticeid" jdbcType="INTEGER" />
    <result column="Title" property="title" jdbcType="VARCHAR" />
    <result column="Author" property="author" jdbcType="VARCHAR" />
    <result column="CreateDate" property="createdate" jdbcType="DATE" />
    <result column="EditDate" property="editdate" jdbcType="DATE" />
    <result column="AuthUserId" property="authuserid" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.model.TNoticeWithBLOBs" extends="BaseResultMap" >
    <result column="Content" property="content" jdbcType="LONGVARCHAR" />
    <result column="Description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    NoticeId, Title, Author, CreateDate, EditDate, AuthUserId
  </sql>
  <sql id="Blob_Column_List" >
    Content, Description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.model.TNoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.model.TNoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_notice
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_notice
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.TNoticeExample" >
    delete from t_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.model.TNoticeWithBLOBs" >
    insert into t_notice (NoticeId, Title, Author, 
      CreateDate, EditDate, AuthUserId, 
      Content, Description)
    values (#{noticeid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{createdate,jdbcType=DATE}, #{editdate,jdbcType=DATE}, #{authuserid,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.model.TNoticeWithBLOBs" >
    insert into t_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="noticeid != null" >
        NoticeId,
      </if>
      <if test="title != null" >
        Title,
      </if>
      <if test="author != null" >
        Author,
      </if>
      <if test="createdate != null" >
        CreateDate,
      </if>
      <if test="editdate != null" >
        EditDate,
      </if>
      <if test="authuserid != null" >
        AuthUserId,
      </if>
      <if test="content != null" >
        Content,
      </if>
      <if test="description != null" >
        Description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="noticeid != null" >
        #{noticeid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=DATE},
      </if>
      <if test="editdate != null" >
        #{editdate,jdbcType=DATE},
      </if>
      <if test="authuserid != null" >
        #{authuserid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.TNoticeExample" resultType="java.lang.Integer" >
    select count(*) from t_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_notice
    <set >
      <if test="record.noticeid != null" >
        NoticeId = #{record.noticeid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        Title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        Author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        CreateDate = #{record.createdate,jdbcType=DATE},
      </if>
      <if test="record.editdate != null" >
        EditDate = #{record.editdate,jdbcType=DATE},
      </if>
      <if test="record.authuserid != null" >
        AuthUserId = #{record.authuserid,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        Content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.description != null" >
        Description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_notice
    set NoticeId = #{record.noticeid,jdbcType=INTEGER},
      Title = #{record.title,jdbcType=VARCHAR},
      Author = #{record.author,jdbcType=VARCHAR},
      CreateDate = #{record.createdate,jdbcType=DATE},
      EditDate = #{record.editdate,jdbcType=DATE},
      AuthUserId = #{record.authuserid,jdbcType=VARCHAR},
      Content = #{record.content,jdbcType=LONGVARCHAR},
      Description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_notice
    set NoticeId = #{record.noticeid,jdbcType=INTEGER},
      Title = #{record.title,jdbcType=VARCHAR},
      Author = #{record.author,jdbcType=VARCHAR},
      CreateDate = #{record.createdate,jdbcType=DATE},
      EditDate = #{record.editdate,jdbcType=DATE},
      AuthUserId = #{record.authuserid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.TNoticeWithBLOBs" >
    update t_notice
    <set >
      <if test="title != null" >
        Title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        Author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        CreateDate = #{createdate,jdbcType=DATE},
      </if>
      <if test="editdate != null" >
        EditDate = #{editdate,jdbcType=DATE},
      </if>
      <if test="authuserid != null" >
        AuthUserId = #{authuserid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        Content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null" >
        Description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.model.TNoticeWithBLOBs" >
    update t_notice
    set Title = #{title,jdbcType=VARCHAR},
      Author = #{author,jdbcType=VARCHAR},
      CreateDate = #{createdate,jdbcType=DATE},
      EditDate = #{editdate,jdbcType=DATE},
      AuthUserId = #{authuserid,jdbcType=VARCHAR},
      Content = #{content,jdbcType=LONGVARCHAR},
      Description = #{description,jdbcType=LONGVARCHAR}
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.TNotice" >
    update t_notice
    set Title = #{title,jdbcType=VARCHAR},
      Author = #{author,jdbcType=VARCHAR},
      CreateDate = #{createdate,jdbcType=DATE},
      EditDate = #{editdate,jdbcType=DATE},
      AuthUserId = #{authuserid,jdbcType=VARCHAR}
    where NoticeId = #{noticeid,jdbcType=INTEGER}
  </update>
</mapper>