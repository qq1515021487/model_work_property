<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.TCustomerMapper" >
  <resultMap id="BaseResultMap" type="com.model.TCustomer" >
    <id column="CustomerId" property="customerid" jdbcType="VARCHAR" />
    <result column="CustomerName" property="customername" jdbcType="VARCHAR" />
    <result column="CustomerPassword" property="customerpassword" jdbcType="VARCHAR" />
    <result column="CustomerSex" property="customersex" jdbcType="INTEGER" />
    <result column="Address" property="address" jdbcType="VARCHAR" />
    <result column="CustomerTel" property="customertel" jdbcType="VARCHAR" />
    <result column="WorkTotal" property="worktotal" jdbcType="INTEGER" />
    <result column="HasApplyWork" property="hasapplywork" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CustomerId, CustomerName, CustomerPassword, CustomerSex, Address, CustomerTel, WorkTotal, 
    HasApplyWork
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.model.TCustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_customer
    where CustomerId = #{customerid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_customer
    where CustomerId = #{customerid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.TCustomerExample" >
    delete from t_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.model.TCustomer" >
    insert into t_customer (CustomerId, CustomerName, CustomerPassword, 
      CustomerSex, Address, CustomerTel, 
      WorkTotal, HasApplyWork)
    values (#{customerid,jdbcType=VARCHAR}, #{customername,jdbcType=VARCHAR}, #{customerpassword,jdbcType=VARCHAR}, 
      #{customersex,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{customertel,jdbcType=VARCHAR}, 
      #{worktotal,jdbcType=INTEGER}, #{hasapplywork,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.model.TCustomer" >
    insert into t_customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerid != null" >
        CustomerId,
      </if>
      <if test="customername != null" >
        CustomerName,
      </if>
      <if test="customerpassword != null" >
        CustomerPassword,
      </if>
      <if test="customersex != null" >
        CustomerSex,
      </if>
      <if test="address != null" >
        Address,
      </if>
      <if test="customertel != null" >
        CustomerTel,
      </if>
      <if test="worktotal != null" >
        WorkTotal,
      </if>
      <if test="hasapplywork != null" >
        HasApplyWork,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerid != null" >
        #{customerid,jdbcType=VARCHAR},
      </if>
      <if test="customername != null" >
        #{customername,jdbcType=VARCHAR},
      </if>
      <if test="customerpassword != null" >
        #{customerpassword,jdbcType=VARCHAR},
      </if>
      <if test="customersex != null" >
        #{customersex,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="customertel != null" >
        #{customertel,jdbcType=VARCHAR},
      </if>
      <if test="worktotal != null" >
        #{worktotal,jdbcType=INTEGER},
      </if>
      <if test="hasapplywork != null" >
        #{hasapplywork,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.TCustomerExample" resultType="java.lang.Integer" >
    select count(*) from t_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_customer
    <set >
      <if test="record.customerid != null" >
        CustomerId = #{record.customerid,jdbcType=VARCHAR},
      </if>
      <if test="record.customername != null" >
        CustomerName = #{record.customername,jdbcType=VARCHAR},
      </if>
      <if test="record.customerpassword != null" >
        CustomerPassword = #{record.customerpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.customersex != null" >
        CustomerSex = #{record.customersex,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        Address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.customertel != null" >
        CustomerTel = #{record.customertel,jdbcType=VARCHAR},
      </if>
      <if test="record.worktotal != null" >
        WorkTotal = #{record.worktotal,jdbcType=INTEGER},
      </if>
      <if test="record.hasapplywork != null" >
        HasApplyWork = #{record.hasapplywork,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_customer
    set CustomerId = #{record.customerid,jdbcType=VARCHAR},
      CustomerName = #{record.customername,jdbcType=VARCHAR},
      CustomerPassword = #{record.customerpassword,jdbcType=VARCHAR},
      CustomerSex = #{record.customersex,jdbcType=INTEGER},
      Address = #{record.address,jdbcType=VARCHAR},
      CustomerTel = #{record.customertel,jdbcType=VARCHAR},
      WorkTotal = #{record.worktotal,jdbcType=INTEGER},
      HasApplyWork = #{record.hasapplywork,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.TCustomer" >
    update t_customer
    <set >
      <if test="customername != null" >
        CustomerName = #{customername,jdbcType=VARCHAR},
      </if>
      <if test="customerpassword != null" >
        CustomerPassword = #{customerpassword,jdbcType=VARCHAR},
      </if>
      <if test="customersex != null" >
        CustomerSex = #{customersex,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        Address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="customertel != null" >
        CustomerTel = #{customertel,jdbcType=VARCHAR},
      </if>
      <if test="worktotal != null" >
        WorkTotal = #{worktotal,jdbcType=INTEGER},
      </if>
      <if test="hasapplywork != null" >
        HasApplyWork = #{hasapplywork,jdbcType=TINYINT},
      </if>
    </set>
    where CustomerId = #{customerid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.TCustomer" >
    update t_customer
    set CustomerName = #{customername,jdbcType=VARCHAR},
      CustomerPassword = #{customerpassword,jdbcType=VARCHAR},
      CustomerSex = #{customersex,jdbcType=INTEGER},
      Address = #{address,jdbcType=VARCHAR},
      CustomerTel = #{customertel,jdbcType=VARCHAR},
      WorkTotal = #{worktotal,jdbcType=INTEGER},
      HasApplyWork = #{hasapplywork,jdbcType=TINYINT}
    where CustomerId = #{customerid,jdbcType=VARCHAR}
  </update>

</mapper>